<?xml version="1.0"?>

<robot name="firefly" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:property name="namespace" value="firefly" />

  <!-- Instantiate default firefly-->
  <xacro:include filename="$(find euroc_simulation_server)/urdf/firefly_base.urdf.xacro" />

  <!-- Create joint/link for pose sensor2 -->
  <link name="pose_sensor2_link">
    <inertial>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0"
        izz="0.001" />
      <mass value="0.01" />  <!-- [kg] -->
    </inertial>
  </link>
  <joint name="pose_sensor2_joint" type="revolute">
    <parent link="base_link" />
    <origin xyz="-0.05 0.08 0.1" rpy="-0.1 0.2 -0.3" />
    <child link="pose_sensor2_link" />
    <limit upper="0" lower="0" effort="0" velocity="0" />
  </joint>
  
  <!-- Mount Pose sensor at pose_sensor1_link -->
  <gazebo>
    <!-- Generic 6D pose sensor plugin -->
    <plugin filename="libmav_gazebo_pose_plugin.so" name="pose_sensor1">
      <linkName>pose_sensor1_link</linkName>
      <robotNamespace>${namespace}</robotNamespace>
      <poseTopic>pose1</poseTopic>
      <measurementDivisor>10</measurementDivisor> <!-- only every (seq % measurementDivisor) == 0 measurement is published [int] -->
      <measurementDelay>10</measurementDelay> <!-- time that measurement gets held back before it's published in [simulation cycles (int)] -->
      <unknownDelay>0.0</unknownDelay> <!-- additional delay, that just gets added to the timestamp [s] -->
      <noiseNormalP>0.01 0.01 0.01</noiseNormalP> <!-- standard deviation of additive white gaussian noise [m] -->
      <noiseNormalQ>0.017 0.017 0.017</noiseNormalQ> <!-- standard deviation white gaussian noise [rad]: q_m = q*quaternionFromSmallAngleApproximation(noiseNormalQ) -->
      <noiseUniformP>0 0 0</noiseUniformP> <!-- symmetric bounds of uniform noise [m] -->
      <noiseUniformQ>0 0 0</noiseUniformQ> <!-- symmetric bounds of uniform noise [rad], computation see above -->
      <covarianceImage>package://mav_gazebo/worlds/poseplugin_map1.bmp</covarianceImage>
      <covarianceImageScale>0.1</covarianceImageScale>
    </plugin>
  </gazebo>
  
    <!-- Mount Pose sensor at pose_sensor2_link -->
  <gazebo>
    <!-- Generic 6D pose sensor plugin -->
    <plugin filename="libmav_gazebo_pose_plugin.so" name="pose_sensor1">
      <linkName>pose_sensor2_link</linkName>
      <robotNamespace>${namespace}</robotNamespace>
      <poseTopic>pose2</poseTopic>
      <measurementDivisor>5</measurementDivisor> <!-- only every (seq % measurementDivisor) == 0 measurement is published [int] -->
      <measurementDelay>8</measurementDelay> <!-- time that measurement gets held back before it's published in [simulation cycles (int)] -->
      <unknownDelay>0.001</unknownDelay> <!-- additional delay, that just gets added to the timestamp [s] -->
      <noiseNormalP>0.01 0.01 0.01</noiseNormalP> <!-- standard deviation of additive white gaussian noise [m] -->
      <noiseNormalQ>0.017 0.017 0.017</noiseNormalQ> <!-- standard deviation white gaussian noise [rad]: q_m = q*quaternionFromSmallAngleApproximation(noiseNormalQ) -->
      <noiseUniformP>0 0 0</noiseUniformP> <!-- symmetric bounds of uniform noise [m] -->
      <noiseUniformQ>0 0 0</noiseUniformQ> <!-- symmetric bounds of uniform noise [rad], computation see above -->
      <covarianceImage>package://mav_gazebo/worlds/poseplugin_map2.bmp</covarianceImage>
      <covarianceImageScale>0.1</covarianceImageScale>
    </plugin>
  </gazebo>
</robot>

